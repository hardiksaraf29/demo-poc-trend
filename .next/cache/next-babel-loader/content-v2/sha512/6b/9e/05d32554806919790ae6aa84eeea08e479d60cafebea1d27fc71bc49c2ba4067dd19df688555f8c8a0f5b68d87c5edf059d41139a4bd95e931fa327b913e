{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { registerEmail } from \"../../services/retailer-subscription.service\";\nimport RetailerSubscriptionActions from \"../../types/actions/RetailerSubscription.Actions\";\nexport var show400ErrorAlert = function show400ErrorAlert(error) {\n  if (error.response.data.status === 400) {\n    toast.error(error);\n  } else console.log(error);\n};\nexport var showThankYouMessageAction = function showThankYouMessageAction() {\n  return function (dispatchAction) {\n    dispatchAction({\n      type: RetailerSubscriptionActions.SHOW_THANK_YOU_MESSAGE\n    });\n  };\n};\nexport var hideThankYouMessageAction = function hideThankYouMessageAction() {\n  return function (dispatchAction) {\n    dispatchAction({\n      type: RetailerSubscriptionActions.HIDE_THANK_YOU_MESSAGE\n    });\n  };\n};\nexport var registerEmailAction = function registerEmailAction(payload, onSuccessCallback) {\n  return function (dispatchAction) {\n    registerEmail(payload).then(function (response) {\n      dispatchAction({\n        type: RetailerSubscriptionActions.SUCCESS_REGISTER_EMAIL\n      });\n      dispatchAction(showThankYouMessageAction());\n\n      if (onSuccessCallback && typeof onSuccessCallback === \"function\") {\n        onSuccessCallback();\n      }\n    })[\"catch\"](function (error) {\n      show400ErrorAlert(error);\n    });\n  };\n};","map":{"version":3,"sources":["E:/Tatva/ssr-nextjs-trendii/src/store/actions/retailer-subscription.actions.ts"],"names":["toast","registerEmail","RetailerSubscriptionActions","show400ErrorAlert","error","response","data","status","console","log","showThankYouMessageAction","dispatchAction","type","SHOW_THANK_YOU_MESSAGE","hideThankYouMessageAction","HIDE_THANK_YOU_MESSAGE","registerEmailAction","payload","onSuccessCallback","then","SUCCESS_REGISTER_EMAIL"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,aAAT,QAA8B,8CAA9B;AACA,OAAOC,2BAAP,MAAwC,kDAAxC;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACxC,MAAIA,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,MAApB,KAA+B,GAAnC,EAAwC;AACpCP,IAAAA,KAAK,CAACI,KAAN,CAAYA,KAAZ;AACH,GAFD,MAEOI,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACV,CAJM;AAKP,OAAO,IAAMM,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,SAAM,UAACC,cAAD,EAAyB;AACpEA,IAAAA,cAAc,CAAC;AACXC,MAAAA,IAAI,EAAEV,2BAA2B,CAACW;AADvB,KAAD,CAAd;AAGH,GAJwC;AAAA,CAAlC;AAKP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,SAAM,UAACH,cAAD,EAAyB;AACpEA,IAAAA,cAAc,CAAC;AACXC,MAAAA,IAAI,EAAEV,2BAA2B,CAACa;AADvB,KAAD,CAAd;AAGH,GAJwC;AAAA,CAAlC;AAKP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAgCC,iBAAhC;AAAA,SAC/B,UAACP,cAAD,EAAyB;AACrBV,IAAAA,aAAa,CAACgB,OAAD,CAAb,CACKE,IADL,CACU,UAACd,QAAD,EAAmB;AACrBM,MAAAA,cAAc,CAAC;AACXC,QAAAA,IAAI,EAAEV,2BAA2B,CAACkB;AADvB,OAAD,CAAd;AAGAT,MAAAA,cAAc,CAACD,yBAAyB,EAA1B,CAAd;;AACA,UAAIQ,iBAAiB,IAAI,OAAOA,iBAAP,KAA6B,UAAtD,EAAkE;AAC9DA,QAAAA,iBAAiB;AACpB;AACJ,KATL,WAUW,UAACd,KAAD,EAAgB;AACnBD,MAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACH,KAZL;AAaH,GAf8B;AAAA,CAA5B","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { registerEmail } from \"../../services/retailer-subscription.service\";\r\nimport RetailerSubscriptionActions from \"../../types/actions/RetailerSubscription.Actions\";\r\nimport { RequestRegisterEmail } from \"../../types/requests\"\r\nexport const show400ErrorAlert = (error) => {\r\n    if (error.response.data.status === 400) {\r\n        toast.error(error);\r\n    } else console.log(error);\r\n};\r\nexport const showThankYouMessageAction = () => (dispatchAction: any) => {\r\n    dispatchAction({\r\n        type: RetailerSubscriptionActions.SHOW_THANK_YOU_MESSAGE,\r\n    });\r\n};\r\nexport const hideThankYouMessageAction = () => (dispatchAction: any) => {\r\n    dispatchAction({\r\n        type: RetailerSubscriptionActions.HIDE_THANK_YOU_MESSAGE,\r\n    });\r\n};\r\nexport const registerEmailAction = (payload: RequestRegisterEmail, onSuccessCallback?: Function) =>\r\n    (dispatchAction: any) => {\r\n        registerEmail(payload)\r\n            .then((response: any) => {\r\n                dispatchAction({\r\n                    type: RetailerSubscriptionActions.SUCCESS_REGISTER_EMAIL,\r\n                });\r\n                dispatchAction(showThankYouMessageAction())\r\n                if (onSuccessCallback && typeof onSuccessCallback === \"function\") {\r\n                    onSuccessCallback();\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                show400ErrorAlert(error);\r\n            })\r\n    }"]},"metadata":{},"sourceType":"module"}