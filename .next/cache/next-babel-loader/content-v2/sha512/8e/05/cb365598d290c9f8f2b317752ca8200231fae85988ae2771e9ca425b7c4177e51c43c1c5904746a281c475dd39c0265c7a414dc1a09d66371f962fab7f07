{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport NewsActions from \"../../types/actions/News.Actions\";\nexport const initialState = {\n  isLoadingNews: true,\n  tendingNews: []\n};\nexport const NewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NewsActions.GET_TRENDING_NEWS_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoadingNews: true\n      });\n\n    case NewsActions.GET_TRENDING_NEWS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoadingNews: false,\n          tendingNews: action.payload\n        });\n      }\n\n    case NewsActions.GET_TRENDING_NEWS_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoadingInspirations: false\n      });\n\n    default:\n      return state;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}