{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport NewsActions from \"../../types/actions/News.Actions\";\nexport const initialState = {\n  isLoadingNews: true,\n  tendingNews: []\n};\nexport const NewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NewsActions.GET_TRENDING_NEWS_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoadingNews: true\n      });\n\n    case NewsActions.GET_TRENDING_NEWS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoadingNews: false,\n          tendingNews: action.payload\n        });\n      }\n\n    case NewsActions.GET_TRENDING_NEWS_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoadingInspirations: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Owner/Downloads/TatvaSoftSkype/ssr-nextjs-trendii/ssr-nextjs-trendii/src/store/reducers/news.reducer.ts"],"names":["NewsActions","initialState","isLoadingNews","tendingNews","NewsReducer","state","action","type","GET_TRENDING_NEWS_REQUEST","GET_TRENDING_NEWS","payload","GET_TRENDING_NEWS_FAILURE","isLoadingInspirations"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,kCAAxB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,aAAa,EAAE,IADW;AAE1BC,EAAAA,WAAW,EAAE;AAFa,CAArB;AAKP,OAAO,MAAMC,WAAW,GAAG,CACzBC,KAAK,GAAGJ,YADiB,EAEzBK,MAFyB,KAGjB;AACR,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,yBAAjB;AACE,6CACKH,KADL;AAEEH,QAAAA,aAAa,EAAE;AAFjB;;AAIF,SAAKF,WAAW,CAACS,iBAAjB;AAAoC;AAClC,+CACKJ,KADL;AAEEH,UAAAA,aAAa,EAAE,KAFjB;AAGEC,UAAAA,WAAW,EAACG,MAAM,CAACI;AAHrB;AAKD;;AACD,SAAKV,WAAW,CAACW,yBAAjB;AACE,6CACKN,KADL;AAEEO,QAAAA,qBAAqB,EAAE;AAFzB;;AAIF;AACE,aAAOP,KAAP;AAnBJ;AAqBD,CAzBM","sourcesContent":["import NewsActions from \"../../types/actions/News.Actions\";\r\n\r\nexport const initialState = {\r\n  isLoadingNews: true,\r\n  tendingNews: [],\r\n};\r\n\r\nexport const NewsReducer = (\r\n  state = initialState,\r\n  action: any\r\n): any => {\r\n  switch (action.type) {\r\n    case NewsActions.GET_TRENDING_NEWS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoadingNews: true,\r\n      };\r\n    case NewsActions.GET_TRENDING_NEWS: {\r\n      return {\r\n        ...state,\r\n        isLoadingNews: false,\r\n        tendingNews:action.payload,\r\n      };\r\n    }\r\n    case NewsActions.GET_TRENDING_NEWS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoadingInspirations: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}