{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Tatva\\\\ssr-nextjs-trendii\\\\src\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { appWithTranslation } from 'next-i18next';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport 'styles/globals.css';\nimport 'styles/team-management.css';\nimport { theme } from 'theme';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport React, { useEffect, useState } from 'react';\nimport { UserProvider } from 'contexts/UserContext';\nimport authService from 'services/auth-service'; // import loginService from 'services/login-service'\n\nimport Loader from 'components/common/loader';\nimport Header from '../components/layout/Header';\nimport Sidebar from '../components/layout/Sidebar';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(false);\n  useEffect(() => {\n    const getMenus = async () => {\n      const userId = authService.getUserId();\n\n      if (userId) {\n        // const response = await loginService.getLoginUserDetail(userId)\n        // authService.setUserPermission(response.data.data.permissions, true)\n        setIsLogin(true);\n      } else {\n        setIsLogin(false);\n      }\n    };\n\n    getMenus(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"PTC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [isLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default appWithTranslation(MyApp);","map":{"version":3,"sources":["E:/Tatva/ssr-nextjs-trendii/src/pages/_app.tsx"],"names":["appWithTranslation","Head","ThemeProvider","theme","ToastContainer","React","useEffect","useState","UserProvider","authService","Loader","Header","Sidebar","MyApp","Component","pageProps","isLogin","setIsLogin","getMenus","userId","getUserId"],"mappings":";;;;;;;;;;AAAA,SAASA,kBAAT,QAAmC,cAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAO,oBAAP;AACA,OAAO,4BAAP;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,QAAQ,GAAG,YAAY;AAC3B,YAAMC,MAAM,GAAGV,WAAW,CAACW,SAAZ,EAAf;;AAEA,UAAID,MAAJ,EAAY;AACV;AACA;AACAF,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAJD,MAIO;AACLA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVD;;AAWAC,IAAAA,QAAQ,GAZM,CAad;AACD,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,YAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,mBACGF,OAAO,gBACN;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,GAKJ,IANN,eAOE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEb,KAAtB;AAAA,iCACE,QAAC,SAAD,oBAAeY,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AA4BD,CA/CD;;AAiDA,eAAef,kBAAkB,CAACa,KAAD,CAAjC","sourcesContent":["import { appWithTranslation } from 'next-i18next'\r\nimport Head from 'next/head'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport 'styles/globals.css'\r\nimport 'styles/team-management.css'\r\nimport { theme } from 'theme'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { UserProvider } from 'contexts/UserContext'\r\nimport authService from 'services/auth-service'\r\n// import loginService from 'services/login-service'\r\nimport Loader from 'components/common/loader'\r\nimport Header from '../components/layout/Header'\r\nimport Sidebar from '../components/layout/Sidebar'\r\n\r\nconst MyApp = ({ Component, pageProps }) => {\r\n  const [isLogin, setIsLogin] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getMenus = async () => {\r\n      const userId = authService.getUserId()\r\n\r\n      if (userId) {\r\n        // const response = await loginService.getLoginUserDetail(userId)\r\n        // authService.setUserPermission(response.data.data.permissions, true)\r\n        setIsLogin(true)\r\n      } else {\r\n        setIsLogin(false)\r\n      }\r\n    }\r\n    getMenus()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>PTC</title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n        <meta\r\n          name=\"viewport\"\r\n          content=\"minimum-scale=1, initial-scale=1, width=device-width\"\r\n        />\r\n      </Head>\r\n\r\n      <Loader />\r\n      <ToastContainer />\r\n      <UserProvider>\r\n        <div className=\"wrapper\">\r\n          {isLogin ? (\r\n            <div>\r\n              <Header />\r\n              <Sidebar />\r\n            </div>\r\n          ) : null}\r\n          <ThemeProvider theme={theme}>\r\n            <Component {...pageProps} />\r\n          </ThemeProvider>\r\n        </div>\r\n      </UserProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default appWithTranslation(MyApp)\r\n"]},"metadata":{},"sourceType":"module"}