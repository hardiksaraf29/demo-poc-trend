{"ast":null,"code":"import _defineProperty from \"E:/Tatva/ssr-nextjs-trendii/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"E:/Tatva/ssr-nextjs-trendii/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"E:/Tatva/ssr-nextjs-trendii/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"E:\\\\Tatva\\\\ssr-nextjs-trendii\\\\src\\\\components\\\\reactstrap-formik\\\\ReactstrapFormikInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nvar ReactstrapFormikInput = function ReactstrapFormikInput(_ref) {\n  _s();\n\n  var fields = _extends({}, _ref.field),\n      _ref$form = _ref.form,\n      touched = _ref$form.touched,\n      errors = _ref$form.errors,\n      setFieldTouched = _ref$form.setFieldTouched,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n\n  var _useState = useState(false),\n      isFocused = _useState[0],\n      setFocus = _useState[1];\n\n  var id = props.id,\n      className = props.className,\n      is = props.is,\n      rest = _objectWithoutProperties(props, [\"id\", \"className\", \"is\"]);\n\n  var handleFocus = function handleFocus() {\n    setFocus(true);\n  };\n\n  var handleBlur = function handleBlur() {\n    setFocus(false);\n    setFieldTouched(fields.name, true);\n  };\n\n  var groupClassName = \"\";\n\n  if (isFocused || fields.value) {\n    groupClassName = \"value-exists\";\n  }\n\n  if (className) {\n    groupClassName = groupClassName + \" \" + className;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    controlId: id,\n    className: groupClassName,\n    children: [props.label && /*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"float-label\",\n      htmlFor: fields.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Form.Control, _objectSpread(_objectSpread(_objectSpread({\n      as: is\n    }, rest), fields), {}, {\n      isInvalid: Boolean(touched[fields.name] && errors[fields.name]),\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      className: Boolean(touched[fields.name] && errors[fields.name]) && \"error\"\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), touched[fields.name] && errors[fields.name] && errors[fields.name] !== \"required\" && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n      className: \"pb-0 error invalid-feedback d-block\",\n      type: \"invalid\",\n      children: errors[fields.name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ReactstrapFormikInput, \"Bzmnxubl7jNPF4ELwVwuAKBXXmw=\");\n\n_c = ReactstrapFormikInput;\nexport default ReactstrapFormikInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactstrapFormikInput\");","map":{"version":3,"sources":["E:/Tatva/ssr-nextjs-trendii/src/components/reactstrap-formik/ReactstrapFormikInput.tsx"],"names":["React","useState","Form","ReactstrapFormikInput","fields","field","form","touched","errors","setFieldTouched","props","isFocused","setFocus","id","className","is","rest","handleFocus","handleBlur","name","groupClassName","value","label","Boolean"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAInB;AAAA;;AAAA,MAHGC,MAGH,qBAHTC,KAGS;AAAA,uBAFTC,IAES;AAAA,MAFDC,OAEC,aAFDA,OAEC;AAAA,MAFQC,MAER,aAFQA,MAER;AAAA,MAFgBC,eAEhB,aAFgBA,eAEhB;AAAA,MADNC,KACM;;AAAA,kBACqBT,QAAQ,CAAC,KAAD,CAD7B;AAAA,MACFU,SADE;AAAA,MACSC,QADT;;AAAA,MAEDC,EAFC,GAE8BH,KAF9B,CAEDG,EAFC;AAAA,MAEGC,SAFH,GAE8BJ,KAF9B,CAEGI,SAFH;AAAA,MAEcC,EAFd,GAE8BL,KAF9B,CAEcK,EAFd;AAAA,MAEqBC,IAFrB,4BAE8BN,KAF9B;;AAGT,MAAMO,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,MAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBN,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAH,IAAAA,eAAe,CAACL,MAAM,CAACe,IAAR,EAAc,IAAd,CAAf;AACD,GAHD;;AAKA,MAAIC,cAAc,GAAG,EAArB;;AACA,MAAIT,SAAS,IAAIP,MAAM,CAACiB,KAAxB,EAA+B;AAC7BD,IAAAA,cAAc,GAAG,cAAjB;AACD;;AACD,MAAIN,SAAJ,EAAe;AACbM,IAAAA,cAAc,GAAGA,cAAc,GAAG,GAAjB,GAAuBN,SAAxC;AACD;;AAED,sBACE,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAED,EAAvB;AAA2B,IAAA,SAAS,EAAEO,cAAtC;AAAA,eACGV,KAAK,CAACY,KAAN,iBACC,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAE,aAAvB;AAAsC,MAAA,OAAO,EAAElB,MAAM,CAACS,EAAtD;AAAA,gBACGH,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,aAFJ,eAME,QAAC,IAAD,CAAM,OAAN;AACE,MAAA,EAAE,EAAEP;AADN,OAEMC,IAFN,GAGMZ,MAHN;AAIE,MAAA,SAAS,EAAEmB,OAAO,CAAChB,OAAO,CAACH,MAAM,CAACe,IAAR,CAAP,IAAwBX,MAAM,CAACJ,MAAM,CAACe,IAAR,CAA/B,CAJpB;AAKE,MAAA,OAAO,EAAEF,WALX;AAME,MAAA,MAAM,EAAEC,UANV;AAOE,MAAA,SAAS,EACPK,OAAO,CAAChB,OAAO,CAACH,MAAM,CAACe,IAAR,CAAP,IAAwBX,MAAM,CAACJ,MAAM,CAACe,IAAR,CAA/B,CAAP,IAAwD;AAR5D;AAAA;AAAA;AAAA;AAAA,aANF,EAiBGZ,OAAO,CAACH,MAAM,CAACe,IAAR,CAAP,IACCX,MAAM,CAACJ,MAAM,CAACe,IAAR,CADP,IAECX,MAAM,CAACJ,MAAM,CAACe,IAAR,CAAN,KAAwB,UAFzB,iBAGG,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AACE,MAAA,SAAS,EAAC,qCADZ;AAEE,MAAA,IAAI,EAAC,SAFP;AAAA,gBAIGX,MAAM,CAACJ,MAAM,CAACe,IAAR;AAJT;AAAA;AAAA;AAAA;AAAA,aApBN;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA8BD,CAtDD;;GAAMhB,qB;;KAAAA,qB;AAuDN,eAAeA,qBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst ReactstrapFormikInput = ({\r\n  field: { ...fields },\r\n  form: { touched, errors, setFieldTouched },\r\n  ...props\r\n}: any) => {\r\n  const [isFocused, setFocus] = useState(false);\r\n  const { id, className, is, ...rest } = props;\r\n  const handleFocus = () => {\r\n    setFocus(true);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setFocus(false);\r\n    setFieldTouched(fields.name, true);\r\n  };\r\n\r\n  let groupClassName = \"\";\r\n  if (isFocused || fields.value) {\r\n    groupClassName = \"value-exists\";\r\n  }\r\n  if (className) {\r\n    groupClassName = groupClassName + \" \" + className;\r\n  }\r\n\r\n  return (\r\n    <Form.Group controlId={id} className={groupClassName}>\r\n      {props.label && (\r\n        <Form.Label className={\"float-label\"} htmlFor={fields.id}>\r\n          {props.label}\r\n        </Form.Label>\r\n      )}\r\n      <Form.Control\r\n        as={is}\r\n        {...rest}\r\n        {...fields}\r\n        isInvalid={Boolean(touched[fields.name] && errors[fields.name])}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        className={\r\n          Boolean(touched[fields.name] && errors[fields.name]) && \"error\"\r\n        }\r\n      />\r\n      {touched[fields.name] &&\r\n        errors[fields.name] &&\r\n        errors[fields.name] !== \"required\" && (\r\n          <Form.Control.Feedback\r\n            className=\"pb-0 error invalid-feedback d-block\"\r\n            type=\"invalid\"\r\n          >\r\n            {errors[fields.name]}\r\n          </Form.Control.Feedback>\r\n        )}\r\n    </Form.Group>\r\n  );\r\n};\r\nexport default ReactstrapFormikInput;\r\n"]},"metadata":{},"sourceType":"module"}